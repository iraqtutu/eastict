<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
	<!-- 引入配置文件 -->
	<properties resource="init.properties" />

	<!-- 指定数据连接驱动jar地址 -->
	<classPathEntry location="${classPath}" />

	<!-- 一个数据库一个context -->
	<context id="frame">
		<!-- 注释 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" /><!-- 是否取消注释 -->
			<property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳 -->
		</commentGenerator>

		<!-- jdbc连接 -->
		<jdbcConnection driverClass="${jdbc_driver}"
			connectionURL="jdbc:mysql://localhost:3306/frame" userId="${jdbc_user}" password="${jdbc_password}" />

		<!-- 类型转换 -->
		<javaTypeResolver>
			<!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成实体类地址 -->
		<javaModelGenerator targetPackage="${genpackage}.pojo.frame"
			targetProject="${project}">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
			<!-- 是否针对string类型的字段在set的时候进行trim调用 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 生成mapxml文件 -->
		<sqlMapGenerator targetPackage="${genpackage}.mapper.frame"
			targetProject="${project}">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- 生成mapxml对应client，也就是接口dao -->
		<javaClientGenerator targetPackage="${genpackage}.mapper.frame"
			targetProject="${project}" type="XMLMAPPER">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!-- 配置表信息 -->
		<!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample 
			是否生成 example类 -->

		<!-- 忽略列，不生成bean 字段 <ignoreColumn /> -->
		<!-- 指定列的java数据类型 <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" 
			/> -->
		<table schema="${jdbc_user}" tableName="function"
			domainObjectName="Tfunction" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="app" domainObjectName="Tapp"
			enableCountByExample="false" enableDeleteByExample="false"
			enableSelectByExample="true" enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="nodeproperty"
			domainObjectName="Tnodeproperty" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="user" domainObjectName="Tuser"
			enableCountByExample="false" enableDeleteByExample="false"
			enableSelectByExample="true" enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="user_node"
			domainObjectName="Tusernode" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="view" domainObjectName="Tview"
			enableCountByExample="false" enableDeleteByExample="false"
			enableSelectByExample="true" enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="viewnode"
			domainObjectName="Tviewnode" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
	</context>
	<context id="pam">
		<!-- 注释 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" /><!-- 是否取消注释 -->
			<property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳 -->
		</commentGenerator>

		<!-- jdbc连接 -->
		<jdbcConnection driverClass="${jdbc_driver}"
			connectionURL="${jdbc_url}" userId="${jdbc_user}" password="${jdbc_password}" />

		<!-- 类型转换 -->
		<javaTypeResolver>
			<!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成实体类地址 -->
		<javaModelGenerator targetPackage="${genpackage}.pojo.pam"
			targetProject="${project}">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
			<!-- 是否针对string类型的字段在set的时候进行trim调用 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 生成mapxml文件 -->
		<sqlMapGenerator targetPackage="${genpackage}.mapper.pam"
			targetProject="${project}">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- 生成mapxml对应client，也就是接口dao -->
		<javaClientGenerator targetPackage="${genpackage}.mapper.pam"
			targetProject="${project}" type="XMLMAPPER">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!-- 配置表信息 -->
		<!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample 
			是否生成 example类 -->

		<!-- 忽略列，不生成bean 字段 <ignoreColumn /> -->
		<!-- 指定列的java数据类型 <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" 
			/> -->
		<table schema="${jdbc_user}" tableName="function"
			domainObjectName="Tfunction" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="app" domainObjectName="Tapp"
			enableCountByExample="false" enableDeleteByExample="false"
			enableSelectByExample="true" enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="nodeproperty"
			domainObjectName="Tnodeproperty" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="user" domainObjectName="Tuser"
			enableCountByExample="false" enableDeleteByExample="false"
			enableSelectByExample="true" enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="user_node"
			domainObjectName="Tusernode" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="view" domainObjectName="Tview"
			enableCountByExample="false" enableDeleteByExample="false"
			enableSelectByExample="true" enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="viewnode"
			domainObjectName="Tviewnode" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
	</context>
	<context id="flow">
		<!-- 注释 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" /><!-- 是否取消注释 -->
			<property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳 -->
		</commentGenerator>

		<!-- jdbc连接 -->
		<jdbcConnection driverClass="${jdbc_driver}"
			connectionURL="jdbc:mysql://localhost:3306/lightflow" userId="${jdbc_user}"
			password="${jdbc_password}" />

		<!-- 类型转换 -->
		<javaTypeResolver>
			<!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成实体类地址 -->
		<javaModelGenerator targetPackage="${genpackage}.pojo.flow"
			targetProject="${project}">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
			<!-- 是否针对string类型的字段在set的时候进行trim调用 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!-- 生成mapxml文件 -->
		<sqlMapGenerator targetPackage="${genpackage}.mapper.flow"
			targetProject="${project}">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>

		<!-- 生成mapxml对应client，也就是接口dao -->
		<javaClientGenerator targetPackage="${genpackage}.mapper.flow"
			targetProject="${project}" type="XMLMAPPER">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!-- 配置表信息 -->
		<!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample 
			是否生成 example类 -->

		<!-- 忽略列，不生成bean 字段 <ignoreColumn /> -->
		<!-- 指定列的java数据类型 <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" 
			/> -->
		<table schema="${jdbc_user}" tableName="re_model"
			domainObjectName="Tmodel" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="re_step"
			domainObjectName="Tstep" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="ru_task"
			domainObjectName="Ttask" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
		<table schema="${jdbc_user}" tableName="ru_var"
			domainObjectName="Tvar" enableCountByExample="false"
			enableDeleteByExample="false" enableSelectByExample="true"
			enableUpdateByExample="false">
		</table>
	</context>
</generatorConfiguration>